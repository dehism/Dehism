local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera
local Animator = Humanoid:WaitForChild("Animator")

local Animation = Instance.new("Animation")
Animation.AnimationId = "rbxassetid://125865269944406"
local LoadedAnimation = Animator:LoadAnimation(Animation)

local GUI = Instance.new("ScreenGui")
GUI.Parent = LocalPlayer:WaitForChild("PlayerGui")

local AscendButton = Instance.new("TextButton")
AscendButton.Size = UDim2.new(0.15, 0, 0.08, 0)
AscendButton.Position = UDim2.new(0.1, 0, 0.8, 0)
AscendButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AscendButton.Text = "ASCEND"
AscendButton.Parent = GUI

local ControlButton = Instance.new("TextButton")
ControlButton.Size = UDim2.new(0.15, 0, 0.08, 0)
ControlButton.Position = UDim2.new(0.1, 0, 0.8, 0)
ControlButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ControlButton.Text = "CONTROL"
ControlButton.Parent = GUI

local ControlFrame = Instance.new("Frame")
ControlFrame.Size = UDim2.new(0.3, 0, 0.15, 0) -- Increased height to fit text box
ControlFrame.Position = UDim2.new(0.35, 0, 0.6, 0)
ControlFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
ControlFrame.Visible = false
ControlFrame.Parent = GUI

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(1, 0, 0.3, 0)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Text = "Speed: 70"
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedLabel.TextScaled = true
SpeedLabel.Parent = ControlFrame

-- Remove the slider and replace with text box
local SpeedTextBox = Instance.new("TextBox")
SpeedTextBox.Size = UDim2.new(0.9, 0, 0.4, 0)
SpeedTextBox.Position = UDim2.new(0.05, 0, 0.5, 0)
SpeedTextBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
SpeedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedTextBox.Text = "70"
SpeedTextBox.TextScaled = true
SpeedTextBox.Parent = ControlFrame

local CreditsLabel = Instance.new("TextLabel")
CreditsLabel.Size = UDim2.new(0.3, 0, 0.1, 0)
CreditsLabel.Position = UDim2.new(0.35, 0, 0.8, 0)
CreditsLabel.BackgroundTransparency = 1
CreditsLabel.Text = "Inspired by JDarks"
CreditsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
CreditsLabel.TextScaled = true
CreditsLabel.Parent = GUI
CreditsLabel.Visible = false

local IsAscending = false
local IsControlling = false
local HoverHeight = 35
local Ball
local VelocityBody
local AscendSpeed = 2.5
local SpeedValue = 70

-- Function to validate and set speed
local function SetSpeed(newSpeed)
    newSpeed = tonumber(newSpeed)
    if newSpeed then
        newSpeed = math.clamp(newSpeed, 1, 500) -- Set min and max speed limits
        SpeedValue = newSpeed
        SpeedLabel.Text = "Speed: " .. tostring(math.floor(newSpeed))
        SpeedTextBox.Text = tostring(math.floor(newSpeed))
    else
        -- If invalid input, reset to current value
        SpeedTextBox.Text = tostring(SpeedValue)
    end
end

SpeedTextBox.FocusLost:Connect(function(enterPressed)
    SetSpeed(SpeedTextBox.Text)
end)

local function FindFootball()
    return workspace:FindFirstChild("Football")
end

local function StartAscending()
    if not Ball or IsControlling then return end

    local angle = 0
    VelocityBody = Instance.new("BodyVelocity")
    VelocityBody.Velocity = Vector3.new(0, 25, 0)
    VelocityBody.MaxForce = Vector3.new(5000, 4000, 4000)
    VelocityBody.Parent = Ball

    local HeartbeatConnection
    HeartbeatConnection = RunService.Heartbeat:Connect(function(deltaTime)
        if not IsAscending or not Ball or not Ball.Parent or IsControlling then
            if VelocityBody then
                VelocityBody:Destroy()
                VelocityBody = nil
            end
            if HeartbeatConnection then
                HeartbeatConnection:Disconnect()
                HeartbeatConnection = nil
            end
            return
        end

        angle = angle + (85 * deltaTime)
        local offsetX = math.cos(angle) * 5
        local offsetZ = math.sin(angle) * 5
        local targetPosition = Vector3.new(HumanoidRootPart.Position.X + offsetX, HoverHeight + 12, HumanoidRootPart.Position.Z + offsetZ)
        local direction = (targetPosition - Ball.Position).unit
        Ball.Velocity = direction * 85
    end)
end

RunService.Heartbeat:Connect(function()
    if IsAscending then
        if HumanoidRootPart.Position.Y < HoverHeight then
            HumanoidRootPart.Velocity = Vector3.new(0, 25, 0)
        else
            HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
            local MoveDirection = Humanoid.MoveDirection
            if MoveDirection.Magnitude > 0 then
                HumanoidRootPart.Position = HumanoidRootPart.Position + ((MoveDirection * AscendSpeed) / 10)
            end
        end
    end
end)

local function StartControlling()
    if not Ball then return end

    if VelocityBody then
        VelocityBody:Destroy()
        VelocityBody = nil
    end

    Camera.CameraSubject = Ball
    local ControlVelocity = Instance.new("BodyVelocity")
    ControlVelocity.MaxForce = Vector3.new(999999, 999999, 999999)
    ControlVelocity.Parent = Ball

    local ControlConnection
    ControlConnection = RunService.Heartbeat:Connect(function()
        if not IsControlling or not Ball or not Ball.Parent then
            ControlVelocity:Destroy()
            Camera.CameraSubject = Character
            if ControlConnection then
                ControlConnection:Disconnect()
            end
            return
        end
        ControlVelocity.Velocity = Camera.CFrame.LookVector * SpeedValue
    end)
end

AscendButton.MouseButton1Click:Connect(function()
    if IsAscending then
        IsAscending = false
        AscendButton.Text = "ASCEND"
        LoadedAnimation:Stop()
        if VelocityBody then
            VelocityBody:Destroy()
            VelocityBody = nil
        end
    else
        IsAscending = true
        AscendButton.Text = "STOP"
        LoadedAnimation:Play()
        Ball = FindFootball()
        if Ball then
            StartAscending()
        end
    end
end)

ControlButton.MouseButton1Click:Connect(function()
    if not Ball then
        Ball = FindFootball()
        if not Ball then
            warn("No Ball Found!")
            return
        end
    end

    IsControlling = not IsControlling
    ControlButton.BackgroundColor3 = IsControlling and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    ControlFrame.Visible = IsControlling

    if IsControlling then
        StartControlling()
    elseif IsAscending then
        StartAscending()
    end
end)

CreditsLabel.Visible = true
wait(2)
CreditsLabel.Visible = false
